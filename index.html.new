<!DOCTYPE html>
<html>
  <head>
    <title>Monarch High School Girls Basketball</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset='utf-8' />
    <link rel="stylesheet" type="text/css" href="style.css" />
    <link rel="shortcut icon" type="image/png" href="img/coyote.png" />
  </head>
  <body>
    <center>MONARCH GIRLS BASKETBALL</center>
    <img  src="img/coyote.png" alt="Monarch Coyote" width="223" height="360">
    <br>
    2016-17 Varsity
    <br>

    <p>Sample Mohi Roster</p>

    <pre id="content"></pre>
    <hr />
    <div id="tableId" class="roster"></div>

    <script type="text/javascript">
      // Array of API discovery doc URLs for APIs used by the quickstart
      var DISCOVERY_DOCS = ["https://sheets.googleapis.com/$discovery/rest?version=v4"];

      // Authorization scopes required by the API; multiple scopes can be
      // included, separated by spaces.
      var SCOPES = "https://www.googleapis.com/auth/spreadsheets.readonly";

      /**
       *  On load, called to load the auth2 library and API client library.
       */
      function handleClientLoad() {
        gapi.load('client', initClient);
      }

      /**
       *  Initializes the API client library and sets up sign-in state
       *  listeners.
       */
      function initClient() {
        gapi.client.init({
          discoveryDocs: DISCOVERY_DOCS,
          apiKey: 'AIzaSyAF7M4rFbRQnh0L62aO3ANRT9bSqciBobw',
          scope: SCOPES
        }).then(function () {
          // For now, just print a roster - later on we will select
          listRoster('A');
        }, function(reason) {
          alert('Error: ' + reason.result.error.message);
        });
      }

      function generateTable(dataArray, id) {
        // pass in two dimensional array for rows/columns
        // TODO: pass in title, table name
     
        //Create a HTML Table element.
        var table = document.createElement('TABLE');
        // TODO: Should tie name to class 
        table.setAttribute('class', 'roster');
     
        //Get the count of columns.
        var columnCount = dataArray[0].length;
     
        //Add the header row.
        var row = table.insertRow(-1);
        row.setAttribute('class', 'roster');
        for (var i = 0; i < columnCount; i++) {
            var headerCell = document.createElement("TH");
            headerCell.setAttribute('class', 'roster');
            headerCell.innerHTML = dataArray[0][i];
            row.appendChild(headerCell);
        }
     
        //Add the data rows.
        for (var i = 1; i < dataArray.length; i++) {
          row = table.insertRow(-1);
          row.setAttribute('class', 'roster');
          for (var j = 0; j < columnCount; j++) {
            var cell = row.insertCell(-1);
            cell.setAttribute('class', 'roster');
            cell.innerHTML = dataArray[i][j];
          }
        }
 
        var dvTable = document.getElementById(id);
        dvTable.innerHTML = "";
        dvTable.appendChild(table);
      }

      /**
       * Append a pre element to the body containing the given message
       * as its text node. Used to display the results of the API call.
       *
       * @param {string} message Text to be placed in pre element.
       */
      function appendPre(message) {
        var pre = document.getElementById('content');
        var textContent = document.createTextNode(message + '\n');
        pre.appendChild(textContent);
      }

      /**
       * Print the names and majors of students in a sample spreadsheet:
       * https://docs.google.com/spreadsheets/d/1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms/edit/#gid=58192009
       */
      // TODO: Might want to make this more generic
      //       Add table name, and range, spreadsheetId, key)
      function listRoster(team) {
        pagename = String(team) + '-ROSTER'
        rosterRange = pagename + '!A1:D';
        gapi.client.sheets.spreadsheets.values.get({
          spreadsheetId: '1mE65wuB4JSKGjC0fQK45InFoIiNtCynUNVo4BJ5r3NI',
          key: 'AIzaSyAF7M4rFbRQnh0L62aO3ANRT9bSqciBobw',
          range: rosterRange
        }).then(function(response) {
          var range = response.result;
          if (range.values.length > 0) {
            // TODO: Better names and use length instead of hardcode
            var dataArray = new Array();
            for (i = 0; i < range.values.length; i++) {
                var row = range.values[i];
		var dataRow = new Array();
                dataRow.push(row[0])
                dataRow.push(row[1])
                dataRow.push(row[2])
                dataRow.push(row[3])
                dataArray.push(dataRow);
            }
	    generateTable(dataArray, 'tableId');
          } else {
            appendPre('No roster is available');
          }
        }, function(response) {
          appendPre('Error: ' + response.result.error.message);
        });
      }
    </script>

    <script async defer src="https://apis.google.com/js/api.js"
      onload="this.onload=function(){};handleClientLoad()"
      onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
  </body>
</html>

